---
title: "COVID-19 Information"
runtime: shiny
---

```{r setup, include=FALSE, warning=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(USAboundaries)
library(knitr)
library(sf)
library(shiny)
library(viridis)

# Map theme edited from:
# https://timogrossenbacher.ch/2016/12/beautiful-thematic-maps-with-ggplot2-only/
# I quite like the default Ubuntu font, so I've used the showtext library to
# automatically download it for use in the theme.
#
library(showtext)
font_add_google("Ubuntu")
theme_map <- function(...) {
  theme_minimal() +
    theme(
      text = element_text(family = "Ubuntu", color = "#22211d"),
      axis.line = element_blank(),
      axis.text.x = element_blank(),
      axis.text.y = element_blank(),
      axis.ticks = element_blank(),
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      #panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
      #panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      # plot.background = element_rect(fill = "#f5f5f2", color = NA),
      plot.background = element_blank(),
      plot.title = element_text(hjust = 0.5, color = "#4e4d47", size = 48),
      # panel.background = element_rect(fill = "#f5f5f2", color = NA),
      panel.background = element_blank(),
      legend.background = element_rect(fill = "#f5f5f2", color = NA),
      panel.border = element_blank(),
      ...
    )
}
```


```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Getting USA data
us_states() %>%
  filter(!name %in% c("Puerto Rico", "Alaska", "Hawaii")) %>%
  st_transform(5070) ->
  states

states %>%
  st_union() %>%
  st_cast("MULTILINESTRING") ->
  usaOutline

# url = "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv"
covid <- read_csv("data/us-counties.csv")

us_counties() %>%
  filter(!state_name %in% c("Puerto Rico", "Alaska", "Hawaii")) %>%
  select(name, state_name, geometry) %>%
  right_join(covid,
             by = c("name" = "county", "state_name" = "state")) %>%
  st_transform(5070) ->
  counties

# Testing data plots
# ggplot() +
#   geom_sf(data = states, lwd = 1) +
#   geom_sf(data = counties %>%
#             filter(date == max(date)), fill = NA, lty = 2)
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Shiny Code
ui <- fluidPage(
  fluidRow(
    column(3,
           dateInput("dateIn",
                     h3("Date"))),
    
    column(3,
           selectInput("stateIn",
                       h3("State"),
                       choices = as.list(state.name)))
  ),
  
  mainPanel(plotOutput("plot"))
)

server <- function(input, output) {
  stateInput <- reactive({
    filter(states, name == input$stateIn)
  })
  
  countiesInput <- reactive({
     filter(counties, state_name == input$stateIn & date == input$dateIn)
  })
  
  output$plot <- renderPlot({
    ggplot() +
      geom_sf(data = stateInput()) +
      geom_sf(data = countiesInput(), aes(fill = cases)) +
      scale_fill_viridis(option = "magma",
                         direction = -1,
                         name = "Confirmed COVID-19 Cases") +
      theme_map()
  })
}

shinyApp(ui = ui, server = server, options = list(height = 1080))
```
